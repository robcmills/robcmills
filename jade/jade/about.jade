
#intro.content-head
  img(src="img/me.jpg")
  h2.content-title Robert Carter Mills

.content-section
  h3 coder, engineer, linguist, artist
  p I love programming, conceptual design, languages, and aesthetics. I derive a deep sense of satisfaction from the process of learning, creating, and implementing efficient software solutions, manipulating data to be more palatable, and crafting elegant, extensible, intuitive interfaces.
  p Having been a fast-paced FPS PC gamer most of my life, I have a particular passion for optimizing code and low latency. My highly tuned gaming configs made extensive use of key-bindings, which translated nicely to Vim-style modal editing. I use Sublime Text Vintage mode fluently, along with macros and scripts to quickly and productively manipulate code.

  img#intp(src='img/intp_logo.png')
  p In terms of the #[a(href='http://www.myersbriggs.org') Myers Briggs personality types] I am #[b INTP]: #[br] #[b I]ntroverted i#[b N]tuitive #[b T]hinking #[b P]erceptive
  p.quote #[i "INTP's seek to develop logical explanations for everything that interests them. Theoretical and abstract, interested more in ideas than in social interaction. Quiet, contained, flexible, and adaptable. They have an unusual ability to focus in depth to solve problems in their area of interest. Skeptical, sometimes critical, always analytical."]

  img#way_things_work(src='img/way_things_work.jpg')
  p My favorite book as a child was #[a(href='http://www.amazon.com/The-Things-Work-David-Macaulay/dp/0590429892/ref=pd_sim_b_5') The Way Things Work] by David Macaulay, and my favorite toy was my latest Legos set. I think that pretty much sums up my strongest personality trait. I love learning about and understanding the world around me, and then using that knowledge to build things.
  p I would say I also have a strong artistic / creative streak with a deep appreciation for efficiency and organization of form, function and design. The aesthetic I strive for is a minimal, simple, elegant and polished form that unfolds complexity and power.  In a word: 
  a(href='http://en.wikipedia.org/wiki/Shibui') shibusa (渋さ)
  br
  br

  p #[i &quot;A Japanese word which refers to a particular aesthetic of simple, subtle, and unobtrusive beauty. Shibusa objects appear to be simple overall but they include subtle details, such as textures, that balance simplicity with complexity. This balance ensures that one does not tire of a shibusa object but constantly finds new meaning and enriched beauty that cause its aesthetic value to grow over the years...]
  p #[i Shibusa walks a fine line between contrasting aesthetic concepts such as elegant and rough or spontaneous and restrained.&quot;]

img#shibusa(src='img/shibusa.jpg')


h2#skills.content-title skills

.content-section
  .skill
    div
      img(data-src='img/3ds_logo.png')
    p #[b 3D Studio Max] #[br]I've worked with a variety of 3d modeling programs since my first foray into Caligari Truspace in 1995. In high school I learned AutoCAD to model a CO2 car that I constructed in Woodshop class. More recently I designed and modeled a #[a(href="http://coordinatemotionpuzzlebox.blogspot.com/") puzzle box] in 3d Studio MAX that I then fabricated at SF Tech Shop. I also used 3DS to model the levels and environments of a 3D game I created called #[a(href='http://kyuplex.blogspot.com/') kyuplex]. I learned MaxScript to convert the levels into a custom XML format that the game rendering engine could read.

  .skill
    div
      img(data-src='img/aws_logo.png')
    p #[b Amazon AWS] #[br]When rebuilding the Go Game website, we initially used Heroku. I elected to migrate to AWS EC2 and managed the instantiation, configuration and deployment of a large website and client intakes forms. I have administered the servers for our website, client payment, and primary game platform. Our website CMS content is stored in a MySQL database on RDS. I have managed our website's static assets on S3 and our gaming platform is tightly integrated with S3 for storing all of our client's media. I've built custom ember components that upload to S3 and micro EC2 HTTP servers that monitor postfix mail server installations. Additionally, my hobby for a period was installing and configuring various Linux distro's on my old Dell Mini netbook. 
    
  .skill
    div
      img(data-src='img/bootstrap_logo.png')
    p #[b Twitter Bootstrap] #[br]I first came across Bootstrap in June 2013 when I was hired at #[a(href='http://thegogame.com') The Go Game]. Our real-world gaming platform uses Bootstrap for all of its applications across several different devices, primarily OSX, iOS and Android. So I have worked extensively with and created several interfaces using the framework. I also used Bootstrap for a custom client game with the #[a.ypo(href='') Young Presidents Organization] that was an offline cacheable web app for iPad. (Also my first Ember application) Since then I have used Bootstrap for various projects, and spent a lot of time rummaging around its code and pulling out useful bits and pieces (such as clearfix).

  .skill
    div
      img(data-src='img/bullet_logo.png')
    p #[b Bullet Physics Library] #[br] I selected Bullet as the physics library to use for my 3d game project #[a.kyuplex(href='') kyuplex]. I successfully integrated the library with the open source 3d rendering engine I was using, #[a(href='http://irrlicht.sourceforge.net') irrlicht]. I worked mostly with dynamic rigid bodies and experimented with several different constraints.
    
  .skill
    div
      img(data-src='img/cpp_logo.png')
    p #[b c++] #[br]My favorite language hands down. All of my favorite software, all of the powerful software, written in c++. And I know exactly why I like it; because it's fast. I remember what a difference it made when I went from a pyGtk UI to a compiled Gtk UI.  Night and day. #[br]Python was the first real programming language I learned, followed closely by c and then c++.  As mentioned previously, the bulk of my experience with c++ is from my #[a.kyuplex(href='') kyuplex] project. I yearn to come back to it (or another static compiled language) someday.
    
  .skill
    div
      img(data-src='img/coffeescript_logo.png')
    p #[b coffeescript] #[br]I love coffeescript. It infuses javascript with some of the good parts of Python and Ruby syntax and language constructs, as well as with beautiful, minimal punctuation. The documentation is excellent and definitely worth multiple readings.
  
  .skill
    div
      img(data-src='img/css3_logo.png')
    p #[b CSS3] #[br]I am strong with CSS. While working at #[a(href='http://thegogame.com') The Go Game] I was given sole responsibility for rebuilding the entire website from the ground up. We hired a design firm to do the bulk of the content and layout, which they did and then handed it off to me. I spent months cleaning up the css, optimizing and polishing the site for desktop and mobile on all major browsers, including Internet Explorer all the way down to 8.
    
  .skill
    div
      img(data-src='img/django_logo.png')
    p #[b Django] #[br]I've built a few projects with Django: #[a(href='http://thegogame.com') The Go Game website] with #[a(href='http://mezzanine.jupo.org') Mezzanine], an excellent open source CMS built on top of Django.  I've also put together a #[a(href='https://github.com/robcmills/django-base') Django base template] that can be used to quickly and easily get a bare bones Django app up and running and deployed to an EC2 instance. Also I rebuilt #[a(href='https://secure.thegogame.com') the secure credit card processor] for The Go Game using pure Django. I like Django. I'd enjoy working with it more.
    
  .skill
    div
      img(data-src='img/ember_logo.png')
    p #[b ember.js] #[br]Ember is a modern javascript framework for building ambitious web applications.  Our real-world gaming platform that we developed at The Go Game uses Ember for all of its client side applications.  I've worked extensively with Ember, building, extending, refactoring, and fixing various components of our multi-application suite. The bulk of my experience working with javascript is in the context of Ember. And we have full test coverage.
         
  .skill
    div
      img(data-src='img/flask_logo.png')
    p #[b Flask - Python Microframework] #[br]Client-side we use Ember but on the server, our gaming platform is built on top of Flask, with a ton of custom code. I have some experience with Flask, having built a public gallery view extension.
    
  .skill
    div
      img(data-src='img/gtk_logo.png')
    p #[b GTK+] #[br] I fell immediately in love with Linux when I discovered it, and soon after began learning to code. The first language I learned was Python, and the first UI library I used was pyGtk. Packing boxes, widgets, signals and handlers are like Saturday morning cartoons for me. Warm reminiscent joys when programming was fresh to me.
    
  .skill
    div
      img(data-src='img/html5_logo.png')
    p #[b HTML] #[br]I think it goes without saying that I know HTML, but for completeness I'm including it here.
         
  .skill
    div
      img(data-src='img/irr_logo.png')
    p #[b irrlicht - lightning fast realtime engine] #[br]For years and years I fantasized about creating my own 3d game, with no shortage of ideas that combined elements of many other games in unique ways. Finally once I had crossed the divide from computer power user to computer programmer, that dream seemed reachable. But it took a long time and a lot of hard work to go from Python to c to c++ to irrlicht. An open-source 3d rendering engine that I used for #[a.kyuplex(href='') kyuplex]. It was a joyous journey and I think fondly on the days I was active in the irrlicht forums.
         
  .skill
    div
      img(data-src='img/jade-logo.png')
    p #[b jade - Node Template Engine] #[br]Although Jinja was my first exposure to templating, jade is uniquely both a dialect of HTML and a templating language. I utilize it for generating content heavy HTML quickly and efficiently. It does not play well with Handlebars templates, unfortunately, and I wish I had enough time to write an extension to the language. Would be a fun project.
    
  .skill
    div
      img(data-src='img/js_logo.png')
    p #[b javascript] #[br]Again, like HTML I think it goes without being said that I am strong in javascript. Having worked with Ember mostly, I do tend to use jQuery, but would welcome the opportunity to dig into plain old javascript for a project. But only The Good Parts.
    
         
  .skill
    div
      img(data-src='img/jinja-logo.png')
    p #[b Jinja2] #[br]An excellent templating language for Python. Great for use with Flask (Python Microframework). Similar to Django's templates, this was one of my first exposures to templating in Python.
    
  .skill
    div
      img(data-src='img/jquery_logo.png')
    p #[b jQuery] #[br]Another given, jQuery is pretty awesome and makes any web dev's life easier. I've written a few ajax methods too.
         
  .skill
    div
      img(data-src='img/jsx_logo.png')
    p #[b Photoshop Scripting] #[br]My father bought me Photoshop Version 3.1 in the early 90's when I was still a child. I've been using it ever since and know it like the back of my hand. Me and most kids of my generation. So once I learned to program it wasn't much of a jump to learn Photoshop scripting. Quite handy for bulk processing of images, or splitting a large tiled image of 77 cars into 77 small separate files.
    
  .skill
    div
      img(data-src='img/python_logo.png')
    p #[b Python] #[br]The swiss army knife of programming languages! Python is the first language I learned and I have since grown to like it more and more, even though it's slower than molasses north of The Wall in Westeros. It's got some handy libraries though, such as requests, lxml, BeautifulSoup, and Kivy.

  .skill
    div
      img(data-src='img/react_logo.png')
    p #[b React] #[br]When I started working at #[a(href='http://www.buildingconnected.com' target='_blank') buildingconnected.com] (October 2015) is when I learned React. Their construction bidding management platform was originally built with Backbone, but we migrated to React. Being a young startup, with a small team, I had the opportunity to get my hands very dirty, and I built numerous React components, large and small, both inside and outside of Backbone views. I love working with React, and pure functional components are a great leap forward for front-end development.

  .skill
    div
      img(data-src='img/redux_logo.png')
    p #[b Redux] #[br]#[a(href='http://www.buildingconnected.com' target='_blank') buildingconnected.com] uses Redux with React in our stack, so I also have much experience working with Redux. We use client state as a document store in our platform, as well as to store all application ui state.

  .skill
    div
      img(data-src='img/sass-logo.png')
    p #[b Sass] #[br]Syntactically Awesome Style Sheets are simply a dialect of CSS, and the first alternate dialect of a programming language that I learned. After realizing the potential of programming dialects and their benefits, both practically and aesthetically, I went on to learn dialects of HTML and Javascript such as Jade and CoffeeScript.

.nav
  ul
    li.tab.about-tab(x='about') about
    li.tab.code-tab(x='code') code
    li.tab.more-tab(x='more') more

