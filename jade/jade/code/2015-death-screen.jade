
#death.content-head
  img#chrome-logo(src='img/chrome-logo.png')
  h2.content-title Bugfix - black screen of death

.content-section
  h4 The Problem:
  p Videos would periodically stop loading, and show only a black screen in our judging presentation app. This app is used in front of large audiences at the end of nearly every game we run, and so this particular bug was classified CODE RED and I set about finding a fix ASAP. 

  h4 The Solution:
  p Finding #[a(href="https://code.google.com/p/chromium/issues/detail?id=234779") this Chromium issue] is what helped me finally figure this out;
  p When the browser requests video or audio content, it includes the #[code Range] and #[code Connection:keep-alive] headers in order to download only a small portion of the content quickly, in anticipation that the user may decide not to play the media content before leaving the page. This keeps the connection open until the video is actually played:
  p #[img(src="https://cloud.githubusercontent.com/assets/4131746/8681880/ebadd6ec-2a1e-11e5-9261-96a28b4f8fab.png", style="max-width:100%;")]
  p This causes a problem in the localjudging app because when ember routes to a new video, we simply replace the #[code &lt;source&gt;] url and rerender:

  pre 
    code.javascript.
      Preso.MediaItemShowView = Ember.View.extend(
      ...
      contentDidChange: function() {
        if(this.state === 'inDOM') { this.rerender(); }
      }.observes('controller.content')

  p This leaves the pending #[code 206 Partial Content] requests open, and Chrome allows only 6 open connections per domain. Thus, once that maximum is reached, further requests are not allowed and stall, causing the black screen of death.
  p The solution, according to #[a(href="https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_HTML5_audio_and_video") Mozilla Development Network&#39;s HTML5 Audio and Video Guide] is to stop the download of the media immediately and close the request by setting the media element's #[code src] attribute to an empty string:

  pre
    code.javascript.
      contentDidChange: function() {
      if(this.state === 'inDOM') { 
        if(this.get('controller.isVideo')) {
          var video = this.$('video').get(0);
          video.src = '';
        }
        this.rerender(); 
      }        


